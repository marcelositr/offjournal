# .github/workflows/python-app.yml

name: Teste em Debian 12

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Teste em Debian 12 (Bookworm)
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Instalar dependências do sistema (Python, GTK, venv)
        run: |
          apt-get update
          # Adicionamos python3-venv, que é necessário para criar ambientes virtuais
          apt-get install -y python3 python3-pip python3-venv python3-gi python3-gi-cairo gir1.2-gtk-3.0 gir1.2-webkit2-4.0

      # --- A SEÇÃO CORRIGIDA ESTÁ AQUI ---
      - name: Criar ambiente virtual e instalar dependências Python
        run: |
          # 1. Cria um ambiente virtual na pasta .venv
          python3 -m venv .venv
          # 2. Ativa o ambiente virtual. O 'source' modifica o PATH do shell atual.
          source .venv/bin/activate
          # 3. Agora que o venv está ativo, o 'pip' é seguro e isolado.
          #    Atualizamos o pip dentro do venv.
          pip install --upgrade pip
          # 4. Instala as dependências do requirements.txt dentro do venv.
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Rodar os testes com unittest
        run: |
          # Ativamos o ambiente virtual novamente para este passo
          source .venv/bin/activate
          # Executamos os testes. O Python usado será o do venv.
          python -m unittest discover tests
